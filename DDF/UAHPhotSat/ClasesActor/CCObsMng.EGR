[Version Actor SW]
5
0
0
0
0
[Modificado]
0
0
0
[Estructura]
[Version Estructura]
3
[Parametro]
NULL
 
 
[FinParametro]
[Stack]
1
[FinStack]
[Puertos]
3
[Version Puerto]
0
AttCtrltTmer
0
1
1
[Version Grafico Puerto]
0
38
48
EDROOMTimingSAP
[Version Puerto]
0
ObservTimer
0
1
1
[Version Grafico Puerto]
0
54
48
EDROOMTimingSAP
[Version Puerto]
0
ObsMng
0
1
0
[Version Grafico Puerto]
0
44
4
CPObsMng
[FinPuertos]
[ActoresComponente]
0
[FinActoresComponente]
[Uniones]
0
[FinUniones]
[NumTimers]
4
[FinNumTimers]
[NumMsgDef]
10
[FinNumMsgDef]
[FinEstructura]
[Comportamiento]
[Version Comportamiento]
3
0
[Pools]
0
[Modulos]
1
[Version Modulo]
1
pus_services_iface
 
v1
 
1
1
[Eventos]
2
[Event]
[Version]
1
EvTimerAttCtrltTmer
Timer
[Event]
[Version]
1
EvTimerObservTimer
Timer
[Maquina de Estados]
[Version Maquina de Estados]
1
Top
NULL
[Subestados]
3
[Version SubEstados]
3
I
;
;
;
;
;
0
0
[ObjetoGrafico]
[Version Objeto Grafico]
0
73 73 55 55
[FinObjetoGrafico]
Standby
;
;
;
;
;
1
0
[ObjetoGrafico]
[Version Objeto Grafico]
0
149 229 156 153
[FinObjetoGrafico]
Observation
FProgTakeImage();
;
;
;
;
1
0
[ObjetoGrafico]
[Version Objeto Grafico]
0
510 328 155 183
[FinObjetoGrafico]
[PuntosEleccion]
2
[Version PuntosEleccion]
2
DoAttitudeCtrl
0
[ObjetoGrafico]
[Version Objeto Grafico]
0
434 231 35 35
[FinObjetoGrafico]
TakeImage
0
[ObjetoGrafico]
[Version Objeto Grafico]
0
344 577 35 35
[FinObjetoGrafico]
DoAttitudeCtrl
0
[Ramas]
2
[Version Ramas]
5
FToObservation
GReadyToObservation()
Observation
DSubEst
FToObservation();
 
 
 
;
;
;
;
[GraficoRama]
[Version GraficoRama]
0
465 255 541 328 0
[FinGraficoRama]
ProgAttitudeCtrl
true
Standby
DSubEst
FProgAttitudeCtrl();
 
 
 
;
;
;
;
[GraficoRama]
[Version GraficoRama]
0
451 265 305 310 2
[FinGraficoRama]
TakeImage
0
[Ramas]
2
[Version Ramas]
5
NoLastImage
true
Observation
DSubEst
;
 
 
 
;
;
;
;
[GraficoRama]
[Version GraficoRama]
0
373 606 565 511 1
[FinGraficoRama]
Lastimage
GLastImage()
Standby
DSubEst
FComposite();
 
 
 
;
;
;
;
[GraficoRama]
[Version GraficoRama]
0
361 577 274 382 3
[FinGraficoRama]
[Transiciones]
4
[Version Transicion]
5
Init
I
OSubEstI
Standby
DSubEst
FInit();
[Trigger]
EDROOMsl
EDROOMStart
true
 
 
 
;
;
;
0
;
[GraficoTransicion]
[Version GraficoTransicion]
0
120 117 191 229 0
[FinGraficoTransicion]
DoAttitudeCtrl
Standby
OSubEst
DoAttitudeCtrl
DPEleccion
FDoAttitudeCtrl();
[Trigger]
AttCtrltTmer
EDROOMSignalTimeout
true
 
 
 
;
;
;
0
;
[GraficoTransicion]
[Version GraficoTransicion]
0
305 282 437 257 1
[FinGraficoTransicion]
TakeImage
Observation
OSubEst
TakeImage
DPEleccion
FTakeImage();
[Trigger]
ObservTimer
EDROOMSignalTimeout
true
 
 
 
;
;
;
0
;
[GraficoTransicion]
[Version GraficoTransicion]
0
522 511 372 581 2
[FinGraficoTransicion]
FExecObservationTC
Standby
OSubEst
Standby
DSubEst
;
[Trigger]
ObsMng
SObsMng_TC
true
 
 
 
FExecObsMng_TC();
;
;
0
;
[GraficoTransicion]
[Version GraficoTransicion]
0
199 382 159 382 5
[FinGraficoTransicion]
[VariablesConstantes]
2
[Version VariYConst]
0
CImageInterval
Pr_Time
0,500000
Constante
0
[Version VariYConst]
0
VNextTimeOut
Pr_Time

Variable
0
[Metodos]
11
[Version Metodos]
21
CompositeAction
FComposite()
0
0
0
2
FEndObservation();
FProgAttitudeCtrl();
BasicAction
FDoAttitudeCtrl()
0
0
0
0
1
 
1
pus_service129_do_attitude_ctrl();
BasicAction
FEndObservation()
0
0
0
0
1
 
2
VNextTimeOut.GetTime();
pus_service129_end_observation();
MsgDataHandler
FExecObsMng_TC()
0
0
0
0
1
 
3
	
		// Data access
	varSObsMng_TC.ExecTC();
[ServiceRequest]
Msg->data
ObsMng
SObsMng_TC
CDTCHandler
EDROOMprioNormal
Inform
FInit()
0
0
0
0
1
 
7
	 
	
	 
	//Timing Service useful methods
	 
	time.GetTime(); // Get current monotonic time
	time +=Pr_Time(0,100000); 
[ServiceRequest]
InformAt
AttCtrltTmer
EDROOMSignalTimeout
CDTCHandler
EDROOMprioNormal
Inform
FProgAttitudeCtrl()
0
0
0
0
1
 
9
	 
	//Timing Service useful methods
	 
	time.GetTime(); // Get current monotonic time
	time +=Pr_Time(0,100000); 
 
        
 
 
[ServiceRequest]
InformAt
AttCtrltTmer
EDROOMSignalTimeout
CDTCHandler
EDROOMprioNormal
Inform
FProgTakeImage()
0
0
0
0
1
 
6
	 
	//Timing Service useful methods
	 
	interval = CImageInterval; // interval of X sec + Y microsec
 
        //timers absolutos infor at e inform in relativos
[ServiceRequest]
InformIn
ObservTimer
EDROOMSignalTimeout
 
EDROOMprioNormal
BasicAction
FTakeImage()
0
0
0
0
1
 
1
pus_service129_take_image();
BasicAction
FToObservation()
0
0
0
0
1
 
1
pus_service129_start_observation();
Guard
GLastImage()
0
0
0
0
1
 
1
return pus_service129_is_last_image();
Guard
GReadyToObservation()
0
0
0
0
1
 
1
 return pus_service129_is_observation_ready();
[MaquinasSubEstados]
0
[FinMaquinasSubEstados]
[Fin Maquina de Estados]
[FinComportamiento]
